/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package goomble;

import java.util.Random;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.TimeUnit;

public class GoombleSimulation {

    private Random rand = new Random();
    private static final int MAX_BALANCE = 100;
    private Goombler[] goomblers;
    private GoombleAccount goombleAccount = new GoombleAccount();
    private int initialGoomblersTotalBalance = 0;

    public GoombleSimulation(int numGamblers) {
        goomblers = new Goombler[numGamblers];
        for (int i=0; i<numGamblers; ++i) {
            goomblers[i] = new Goombler(goombleAccount, rand.nextInt(MAX_BALANCE));
            initialGoomblersTotalBalance += goomblers[i].getBalance();
        }
    }

    public static void main(String[] args) throws InterruptedException {
        final int numGoomblers = 12;
        final int numPresses = numGoomblers * MAX_BALANCE;
        long startTime = System.nanoTime();
        GoombleSimulation simulation = new GoombleSimulation(numGoomblers);
        simulation.runSimulation(numPresses);
        long endTime = System.nanoTime();
        long timeElapsed = endTime - startTime;
        simulation.printResults(timeElapsed);
    }

    private void runSimulation(int numPresses) throws InterruptedException {
        final int numThreads = 10;
        ExecutorService threadPool = Executors.newFixedThreadPool(numThreads);
        for (int i=0; i<numPresses; ++i) {
            Goombler goombler = goomblers[rand.nextInt(goomblers.length)];
            threadPool.submit(goombler::lucky);
        }
        threadPool.shutdown();
        // Wait for up to one minute for things to wrap up
        threadPool.awaitTermination(60, TimeUnit.SECONDS);
    }

    private void printResults(long timeElapsed) {
        System.out.println("Initial total Goomblers balance was $" + initialGoomblersTotalBalance);
        int totalBalance = 0;
        for (int i=0; i<goomblers.length; ++i) {
            int balance = goomblers[i].getBalance();
            System.out.println("Goombler #" + i + " has a final balance of $" + balance);
            totalBalance += balance;
        }
        System.out.println("The total Goomblers balance is $" + totalBalance);
        System.out.println("The Goomble balance is $" + goombleAccount.getBalance());
        System.out.println("The atomic Goomble balance is $" + goombleAccount.getAtomicBalance());
        System.out.println("Elapsed time was " + (timeElapsed / 1000000.0) + "ms.");
    }
}
